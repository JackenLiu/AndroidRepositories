package com.javareview.operator;

/**
 * 位运算符
 */
public class BitOperator {
    public static void main(String[] args) {
        /*
        · 按位取反
        00000000 00000000 00000000 00000110     6原码和补码
        11111111 11111111 11111111 11111001     按位取反（此时运算是原码）
     -  00000000 00000000 00000000 00000001
        ----------------------------------------------------
        11111111 11111111 11111111 11111000     反码
        10000000 00000000 00000000 00000110     原码：-7
         */
        System.out.println(~6);


        /*
        一个数异或另外一个数两次等于本身
        00000000 00000000 00000000 00000001
      ^ 00000000 00000000 00000000 00000010
      -------------------------------------
        00000000 00000000 00000000 00000011
      ^ 00000000 00000000 00000000 00000001
      -------------------------------------
        00000000 00000000 00000000 00000010
         */
        System.out.println(1 ^ 2 ^ 1);


        /*
        · 不需要第三方更换两个值
        · 没有超过 int 内存可以使用
         */
        int x = 5;
        int y = 10;
        x = x + y;
        y = x - y;
        x = x - y;
        System.out.println(x);
        System.out.println(y);

        x = 5;
        y = 10;
        x = x ^ y;
        y = x ^ y;
        x = x ^ y;
        System.out.println(x);
        System.out.println(y);

        System.out.println("=====================");

        System.out.println(8 << 3);
        System.out.println(8 >> 2);
        System.out.println(-4 >> 1);
        System.out.println(-4 >>> 1);
    }
}
